version: 2.1

orbs:
  python: circleci/python@0.2.1

executors:
  python38:
    docker:
      - image: circleci/python:3.8
  python37:
    docker:
      - image: circleci/python:3.7
  python36:
    docker:
      - image: circleci/python:3.6
  python35:
    docker:
      - image: circleci/python:3.5
  python34:
    docker:
      - image: circleci/python:3.4
  pypy3:
    docker:
      - image: pypy:3

commands:
  setup_tox:
    description: "Install tox"
    steps:
      - run: pip install -U tox virtualenv tox-factor

  restore_tox_cache:
    description: "Restore .tox directory from previous runs for faster installs"
    steps:
      - restore_cache:
          # In the cache key:
          #   - .Environment.CIRCLE_JOB: We do separate tox environments by job name, so caching and restoring is
          #                              much faster.
          key: tox-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "dev-requirements.txt" }}

  save_tox_cache:
    description: "Save .tox directory into cache for faster installs next time"
    steps:
      - save_cache:
          # In the cache key:
          #   - .Environment.CIRCLE_JOB: We do separate tox environments by job name, so caching and restoring is
          #                              much faster.
          key: tox-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}
          paths:
            - ".tox"

  run_tox_scenario:
    description: "Run scripts/run-tox-scenario with setup, caching and persistence"
    parameters:
      pattern:
        type: string
    steps:
      - checkout
      - setup_tox
      - restore_tox_cache
      - run:
          name: "Run scripts/run-tox-scenario"
          command: tox -f '<< parameters.pattern >>'
      - save_tox_cache

jobs:
  docs:
    executor: python38
    steps:
      - checkout
      - setup_tox
      - restore_tox_cache
      - run: tox -e docs
      - save_tox_cache

  docker-tests:
    executor: python38
    steps:
      - checkout
      - setup_tox
      - restore_tox_cache
      - setup_remote_docker
      - run: tox -e docker-tests
      - save_tox_cache

  lint:
    executor: python38
    steps:
      - checkout
      - setup_tox
      - restore_tox_cache
      - run: tox -e lint
      - save_tox_cache

  py34-core:
    executor: python34
    steps:
      - checkout
      - run:
          name: "Install tox"
          command: sudo pip install -U tox virtualenv tox-factor
      - restore_tox_cache
      - run:
          name: "Run scripts/run-tox-scenario"
          command: tox -f py34-core
      - save_tox_cache

  py34-ext:
    executor: python34
    steps:
      - checkout
      - run:
          name: "Install tox"
          command: sudo pip install -U tox virtualenv tox-factor
      - restore_tox_cache
      - run:
          name: "Run scripts/run-tox-scenario"
          command: tox -f py34-ext
      - save_tox_cache

  py35-core:
    executor: python35
    steps:
      - run_tox_scenario:
          pattern: py35-core

  py35-ext:
    executor: python35
    steps:
      - run_tox_scenario:
          pattern: py35-ext

  py36-core:
    executor: python36
    steps:
      - run_tox_scenario:
          pattern: py36-core

  py36-ext:
    executor: python36
    steps:
      - run_tox_scenario:
          pattern: py36-ext

  py37-core:
    executor: python37
    steps:
      - run_tox_scenario:
          pattern: py37-core

  py37-ext:
    executor: python37
    steps:
      - run_tox_scenario:
          pattern: py37-ext

  py38-core:
    executor: python38
    steps:
      - run_tox_scenario:
          pattern: py38-core

  py38-ext:
    executor: python38
    steps:
      - run_tox_scenario:
          pattern: py38-ext

  pypy3-core:
    executor: pypy3
    steps:
      - run_tox_scenario:
          pattern: pypy3-core

  pypy3-ext:
    executor: pypy3
    steps:
      - run_tox_scenario:
          pattern: pypy3-ext

workflows:
  main:
    jobs:
      - docs
      - lint
      - pypy3-core
      - pypy3-ext
      - py38-core
      - py38-ext
      - py37-core
      - py37-ext
      - py36-core
      - py36-ext
      - py35-core
      - py35-ext
      - py34-core
      - py34-ext
